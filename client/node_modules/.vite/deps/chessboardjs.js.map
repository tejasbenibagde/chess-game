{
  "version": 3,
  "sources": ["../../chessboardjs/www/js/chessboard.js"],
  "sourcesContent": ["/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n"],
  "mappings": "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",
  "names": []
}
